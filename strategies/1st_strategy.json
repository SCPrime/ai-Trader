{
  "name": "1st Strategy",
  "description": "test",
  "natural_language_rules": "Yes\u2014the ZIP I gave you (**ai-trader-suite-pro\\_full.zip**) is a **complete, runnable codebase** for the app we scoped. It isn\u2019t snippets. It includes:\n\n**Back end (FastAPI)**\n\n* `api/main.py` \u2014 all endpoints: `/health`, `/account`, `/positions`, `/orders`, `/indicators`, `/screener/run`, `/news/{symbol}`, `/options/chain/{symbol}`, `/simulate`, `/optimize`, `/command` (Claude tool\u2011use).\n* Hooks for **paper/live** toggle via `.env`.\n\n**Core engine**\n\n* `core/engine.py` \u2014 async event loop (signal \u2192 risk \u2192 order \u2192 notify).\n* `core/order_manager.py` \u2014 Alpaca stock orders (market/limit/bracket with take\u2011profit & stop\u2011loss).\n* `core/risk.py` \u2014 basic per\u2011trade/daily risk gates (extendable).\n* `core/llm_agent.py` \u2014 Claude tool\u2011calling (\u201cexecute\\_trade\u201d, \u201cquery\\_portfolio\u201d, \u201cget\\_price\u201d).\n* `core/screener.py`, `core/optimizer.py`, `core/notifier.py`.\n* **Prewired streaming**: `core/data_stream.py` (IEX feed). Enable by `STREAMING=true` in `.env`.\n\n**Data & indicators**\n\n* `data/providers.py` \u2014 Alpaca REST (account/positions/orders/bars) + NewsAPI fallback.\n* `data/indicators.py` \u2014 SMA/EMA/RSI/MACD/BB/ATR/Stoch/ADX (pure NumPy/Pandas).\n* `data/options.py` \u2014 **Polygon options chains** (works if `POLYGON_API_KEY` set; otherwise returns a helpful note).\n* `data/storage.py` \u2014 local HDF5 scaffold for OHLCV.\n\n**UI (Streamlit)**\n\n* `ui/pages/01_Dashboard.py` \u2014 equity, BP, positions, orders.\n* `ui/pages/02_Charts.py` \u2014 price + overlays + RSI panel.\n* `ui/pages/03_Screener.py` \u2014 \u201cHustle zone\u201d filters.\n* `ui/pages/04_News.py` \u2014 headlines.\n* `ui/pages/05_Agent.py` \u2014 send natural\u2011language commands to Claude tools.\n\n**DevOps & glue**\n\n* `Dockerfile` + `docker-compose.yml` \u2014 run API + UI together.\n* `.github/workflows/ci.yml` \u2014 CI smoke (imports).\n* `.env.example`, `.gitignore`, `README.md`.\n* `scripts/test_alpaca.py` \u2014 quick key/connectivity check.\n\n### What\u2019s *not* included (so expectations are crisp)\n\n* **Options order placement** (multi\u2011leg, Greeks/IV analytics) is **not implemented** yet. You *do* have an options **chain lookup** via Polygon. If you want full options trading (spreads, ladders) we\u2019ll add: an options data provider (chains/greeks), validation (liquidity/IV filters), and an options\u2010order path in `OrderManager`.\n* **Multi\u2011user OAuth** not included (you chose single\u2011user API keys for now).\n* **Advanced portfolio DB & analytics** beyond local HDF5 scaffold (easy add\u2011on when you want).\n\n### Quick verify (takes 2\u20133 minutes)\n\n1. **Keys**: copy `.env.example` \u2192 `.env`, fill `APCA_API_KEY_ID`, `APCA_API_SECRET_KEY`, keep `ALPACA_PAPER=true`. Add `ANTHROPIC_API_KEY` for Claude.\n2. **Docker up**:\n\n   ```bash\n   docker compose up -d --build\n   # API: http://localhost:8000/health  \u2192 should return {\"status\":\"ok\", ...}\n   # UI : http://localhost:8501        \u2192 open Dashboard/Charts/Screener/News/Agent\n   ```\n3. **Agent test**: in UI \u201cAgent\u201d tab, send:\n   `What is my equity and buying power?`\n   Then try:\n   `Buy 1 share of AAPL at market, day.`\n   (Paper account recommended; you\u2019ll see a queued order then a submit via Alpaca.)\n4. **Streaming (optional)**: set `STREAMING=true` in `.env` and restart compose; it will subscribe to the `DEFAULT_WATCHLIST` using the free IEX feed and emit signals.\n5. **Options chain (optional)**: set `POLYGON_API_KEY`, then:\n\n   ```\n   GET /options/chain/AAPL?expiration=YYYY-MM-DD\n   ```\n\n### If you need it pasted as text\n\nIf copying a ZIP into your phone\u2019s Files is annoying, I can paste the **entire repo as plain text** in 4 messages (top\u2011level+api, core, data, ui) so you can drop it into Notes and save later.",
  "structured_rules": {
    "indicators": [
      "rsi",
      "macd",
      "sma",
      "ema",
      "stochastic",
      "adx",
      "atr"
    ],
    "conditions": [],
    "timeframes": [
      "1d"
    ],
    "symbols": [
      "API",
      "IEX",
      "MM",
      "OHLCV",
      "SMA",
      "YYYY",
      "AAPL",
      "CI",
      "RSI",
      "ADX",
      "ATR",
      "GET",
      "BB",
      "EMA",
      "MACD",
      "ZIP",
      "DB",
      "REST",
      "BP",
      "DD",
      "IV",
      "UI"
    ],
    "risk_management": {
      "stop_loss": 0.02,
      "take_profit": 0.04,
      "position_size": 0.01
    }
  },
  "entry_conditions": [
    "Default buy condition based on selected indicators"
  ],
  "exit_conditions": [
    "Stop loss or take profit triggered"
  ],
  "risk_parameters": {
    "stop_loss": 0.02,
    "take_profit": 0.04,
    "position_size": 0.01
  },
  "ai_interpretation": "Basic interpretation: Strategy parsed using rule-based system",
  "created_at": "2025-09-22T16:24:50.359405",
  "updated_at": "2025-09-22T16:24:50.359405",
  "active": true,
  "success_rate": 0.0,
  "total_trades": 0
}